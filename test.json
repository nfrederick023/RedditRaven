export const getPixivIllustrations = async (tagName: string, page: string, slice: number, count: number, token: string): Promise<SuggestedImages | undefined> => {
  // change mode for R18, all, or all ages
  const searchURL = "https://www.pixiv.net/ajax/search/illustrations/" + tagName + "?order=date_d&mode=safe&p=" + page + "&s_mode=s_tag_full&lang=en&version=82d3db204a8e8b7e2f627b893751c3cc6ef300fb";

  const response = await fetch(searchURL,
  {
    method: "GET",
    headers: {
      "accept-language": "en-US", cookie: `PHPSESSID=${token
      }`,
      "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36"
    },
  });


  if (response.ok) {
    const res = await response.json() as PixivIllustSearch;
    const illusts: PixivDetails[] = [];


    const promises: (PixivDetails | undefined)[] = [];

    for (const illustration of res.body.illust.data) {
      if (illustration.aiType !== 2) promises.push(await getImageLink(illustration.id,
      "0"));
    }

    promises.forEach(promise => { if (promise) illusts.push(promise);
    });

    const suggestedImages = illusts.sort((a, b) => b.likeCount - a.likeCount).slice(0,
    60);
    return { suggestedImages
    };
  }
};